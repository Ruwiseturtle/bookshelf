{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-0d7d46cb0d3b35f0.js","node_modules/@parcel/runtime-js/lib/runtime-e5dbb0a8471f397b.js","src/index.js","src/js/categoriesList.js","src/js/content.js","src/js/contentFunctions.js"],"sourcesContent":["module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"lPaFu\");","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.2f44c8a4.js\\\",\\\"lPaFu\\\":\\\"Books.34b8761e.png\\\",\\\"1Vwc0\\\":\\\"shopping.19261174.js\\\"}\"));","import './js/sprite';\nimport './js/header';\nimport './js/categoriesList';\nimport './js/fondsList';\nimport './js/slick-slider';\nimport './js/content';\nimport './js/modalBook';\nimport './js/burgerMenu';\nimport './js/addUserPhoto';\nimport './js/loginization';\nimport './js/scrollup';\nimport './js/footer';\n","import { fetchCategoriesList } from '../services/books-api';\n\nimport { fetchBooksByCategory } from '../services/books-api';\n\n// імпорт функції, що рендерить розміттку по 5 книг бесцелеров\nimport { getTopBooks } from './content';\n\nconst refs = {\n  container: document.querySelector(`.all-categories-box`),\n  title: document.querySelector(`.all-categoris-title`),\n  element: document.querySelector(`.all-categoris-element`),\n  booksContainer: document.querySelector('.container-books'),\n  categoriesList: document.querySelector('.all-categories-container'),\n};\n\n// визначаю місе куди буде рендериться розмітка кник відповідної категорії\nconst containerBook = document.querySelector('.container-books');\n\nlet elementHaveCurrent;\n\nfetchCategoriesList()\n  .then(response => {\n    const categories = response.data;\n    const markup = createMarkup(categories);\n    refs.container.insertAdjacentHTML(`beforeend`, `${markup}`);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\nrefs.title.classList.add('current');\n\nrefs.container.addEventListener(`click`, showCategoryBook);\n\nfunction createMarkup(array) {\n  return array\n    .map(\n      categori =>\n        `<li class=\"all-categoris-list\">\n      <a class=\"all-categoris-element\" href=\"\" data-name=\"${categori.list_name}\"\n        >${categori.list_name}</a\n      >\n    </li>\n      `\n    )\n    .join(``);\n}\n\nfunction showCategoryBook() {\n  event.preventDefault();\n\n  const clickedElement = event.target;\n\n  if (\n    !clickedElement.classList.contains('all-categoris-element') &&\n    !clickedElement.classList.contains('all-categoris-title')\n  ) {\n    return;\n  }\n\n  const categoryName = clickedElement.dataset.name;\n\n  changeCurrent(clickedElement);\n\n  // якщо вибрано категорію `All categories`\n  // рендеряться всі книги\n  if (categoryName === `All categories`) {\n    getTopBooks().then(resp => {\n      if (window.innerWidth < 1439) {\n        const titleCategory = document.querySelector(\n          '.title-container-topBooks'\n        );\n        titleCategory.scrollIntoView({\n          block: 'start',\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n  // якщо вибрана категорія то рендериться\n  // розмітка всіх книг відповідної категорії\n  else {\n    refs.booksContainer.innerHTML = '';\n    refs.categoriesList.classList.add('lock-click-categories');\n    refs.booksContainer.classList.add('content-loader');\n    getBooksFromCategories(categoryName);\n  }\n}\n\nfunction changeCurrent(curentClic) {\n  const allCategoryListItems = document.querySelectorAll(\n    '.all-categoris-list a'\n  );\n  allCategoryListItems.forEach(item => {\n    if (item.classList.contains('current')) {\n      elementHaveCurrent = item;\n    }\n  });\n\n  if (curentClic !== elementHaveCurrent) {\n    curentClic.classList.add('current');\n    elementHaveCurrent.classList.remove('current');\n  }\n}\n\nfunction getBooksFromCategories(category) {\n  fetchBooksByCategory(category)\n    .then(response => {\n      // console.log('Received data from server:', response.data);\n\n      refs.booksContainer.classList.remove('content-loader');\n      renderDataBooks(response.data, category);\n      refs.categoriesList.classList.remove('lock-click-categories');\n    })\n    .then(resp => {\n      if (window.innerWidth < 1439) {\n        const titleCategory = document.querySelector(\n          '.title-container-topBooks'\n        );\n        titleCategory.scrollIntoView({\n          block: 'start',\n          behavior: 'smooth',\n        });\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n}\n\nfunction renderDataBooks(booksData, categoriBooks) {\n  const words = categoriBooks.split(' ');\n  const firstPart = words.slice(0, -1).join(' ');\n  const secondPart = words[words.length - 1];\n\n  const markupCategori = `<h1 class=\"title-container-topBooks\">\n    <span class=\"title_theme\">${firstPart}</span>\n    <span class=\"title_blue\">${secondPart}</span></h1>`;\n\n  const markup = booksData\n    .map((book, indexBook) => {\n      return `<li class=\"content_book\" data-id=${book._id}>\n            <a data-id=${book._id} href=\"${book.book_image}\" class=\"content-book-link\" >\n         <img class=\"content__image\" src=\"${book.book_image}\" alt=\"${book.title}\" loading=\"lazy\" />\n         \n           <span class=\"content_textname\" id=\"content_book_name\">${book.title}</span>\n           <span class=\"content_textauthor\" id=\"content_book_name\">${book.author}</span>\n            </a>\n          </li>`;\n    })\n    .join('');\n  const markupList = `${markupCategori}<ul class=\"content_list_topBooks\">${markup}</ul>`;\n  containerBook.insertAdjacentHTML('beforeend', markupList);\n}\n\n// function autoScroll() {\n\n//   document.getElementById(data).scrollIntoView({\n//     block: 'start',\n//     behavior: 'smooth',\n//   });\n// }\n","import Notiflix from 'notiflix';\nimport { fetchToAllBooks, fetchBooksByCategory } from '../services/books-api';\nimport { renderMarkupTopBooks, countTopBooks } from './contentFunctions';\n\n//кі-сть загружених книг однієї категорії після того, як користувач натиснув на кнопку SEEMORE\nconst categoriesList = document.querySelector('.all-categories-container');\nconst containerBook = document.querySelector('.container-books');\nconst content = document.querySelector('.content');\ncontainerBook.innerHTML = `<div class=\"content-error\"> \n              <img \n              src=\"${require('../images/shopping-list/Books.png')}\"\n              alt=\"error\"\n              class=\"content_imgError\"/>\n         </div>`;\n\ngetTopBooks();\n\n// ф-ція отримує з бекенду дані (ТОП книг)\nexport function getTopBooks() {\n  categoriesList.classList.add('lock-click-categories');\n  containerBook.innerHTML = '';\n  content.classList.add('content-loader');\n\n  return fetchToAllBooks()\n    .then(result => result.data)\n    .then(data => {\n      content.classList.remove('content-loader');\n      containerBook.innerHTML = renderMarkupTopBooks(data);\n      categoriesList.classList.remove('lock-click-categories');\n    });\n}\n\n// ф-ція отримує з бекенду дані про книги по конкретній категорії\nfunction getBooksByCat(butElem) {\n  butElem.nextElementSibling.style.display = 'block';\n  fetchBooksByCategory(butElem.name)\n    .then(result => {\n      butElem.classList.remove('loader');\n      return result.data;\n    })\n    .then(data => {\n      butElem.nextElementSibling.style.display = 'none';\n      renderDataBycat(butElem, data);\n\n      butElem.innerHTML = 'SEE MORE';\n    })\n    .catch();\n}\n\n//ф-ція оброблює дані по конкретній категорії - малює розмітку та вставляє її перед кнопкой\nexport function renderDataBycat(butElem, data) {\n  let markup = createMarkupOfBooksOneCategory(butElem, data);\n  butElem.previousElementSibling.innerHTML = '';\n  butElem.previousElementSibling.insertAdjacentHTML('beforeend', markup);\n}\n\nconst containerBooks = document.querySelector('.container-books');\ncontainerBooks.addEventListener('click', handleSumitSeeMore);\n\nfunction handleSumitSeeMore(e) {\n  e.preventDefault();\n  if (e.target.type !== 'button') {\n    return;\n  }\n\n  e.target.innerHTML = '';\n  e.target.style.border = 'none';\n  getBooksByCat(e.target);\n}\n\nfunction hiddenBtnSeeMore(elem) {\n  elem.classList.add('hidden');\n}\n\n//ф-ція малює розмітку з книгами однієї категорії\nfunction createMarkupOfBooksOneCategory(elem, arrayBooks) {\n  let markup = arrayBooks\n    .map((book, index) => {\n      //якщо загрузили останню книгу, то видаляємо кнопку\n      if (index + 1 === arrayBooks.length) {\n        hiddenBtnSeeMore(elem);\n\n        //якщо категорії не закінчились, то не робимо анімацію для зголовка\n        //наступної категорії, т к їїнемає\n        if (elem.parentNode.nextSibling != null) {\n          elem.parentNode.nextElementSibling.firstElementChild.classList.add(\n            'contend_categoryMove'\n          );\n        }\n\n        Notiflix.Notify.info('this is all. Check out other category books');\n      }\n\n      return `<li class=\"content_book\">\n                          <a data-id=${book._id} href=\"${book.book_image}\" class=\"content-book-link\" >\n                          <img class=\"content__image\" src=\"${book.book_image}\" alt=\"${book.title}\" loading=\"lazy\" />\n                          \n                          <span class=\"content_textname\" id=\"content_book_name\">${book.title}</span>\n                          <span class=\"content_textauthor\" id=\"content_book_author\">${book.author}</span>\n                          </a>\n                </li>`;\n    })\n    .join('');\n  return markup;\n}\n\n//налаштування для Notflix\nNotiflix.Notify.init({\n  width: '480px',\n  position: 'right-bottom',\n  distance: '10px',\n  opacity: 1,\n  fontSize: '20px',\n  clickToClose: true,\n  timeout: 3000,\n  background: '#4f2ee8',\n});\n","//ф-ція для створення розмітки, яка видає топ книг\nexport function renderMarkupTopBooks(array) {\n  const markup = ` <h1 class=\"title-container-topBooks\"><span class=\"title_theme\">Best sellers</span> <span class=\"title_blue\"> books </span></h1>\n  <ul class=\"content_list_categories\">${array\n    .map(kategory => {\n      return `<li class=\"content_categoryItem ${kategory.list_name}\">\n      <h3 class=\"content_category\">${kategory.list_name}</h3>\n                <ul class=\"content_list_topBooks\">${kategory.books\n                  .map((book, indexBook) => {\n                    // if (indexBook < countTopBooks()) {\n                    return `<li class=\"${\n                      indexBook === 1 || indexBook === 2\n                        ? 'content_book tablet-book'\n                        : indexBook === 3 || indexBook === 4\n                        ? 'content_book mobile-book'\n                        : 'content_book'\n                    }\">\n                          <a data-id=${book._id} href=\"${\n                      book.book_image\n                    }\"  class=\"content-book-link\" >\n                        \n                          <img class=\"content__image\" src=\"${\n                            book.book_image\n                          }\" alt=\"${book.title}\" loading=\"lazy\" />\n                         \n                          <span class=\"content_textname\" id=\"content_book_name\">${\n                            book.title\n                          }</span>\n                          <span class=\"content_textauthor\" id=\"content_book_name\">${\n                            book.author\n                          }</span>\n                           </a>\n                          </li>`;\n                    // }\n                  })\n                  .join('')}</ul>\n          \n                \n                <button class=\"content_btnSeeMore\"\n                        type=\"button\"\n                        name=\"${kategory.list_name}\" \n                        action=\"submit\">SEE MORE                        \n                </button>\n                <span class=\"content_loaderBTN\" style=\"display: none\"></span>\n                                                           \n          </li>`;\n    })\n    .join('')}</ul>`;\n  return markup;\n}\n\n// ф-ція приймає книги однієї категорії з бєкенду, вертає масив з книгами цієї категорії\nexport function arrayBooksByCategory(array) {\n  return (books = array.map(book => {\n    return book;\n  }));\n}\n\n// визначаємо, кількість книг в одній категорії в залежності від розміру екрана\nexport function countTopBooks() {\n  if (document.documentElement.clientWidth < 768) {\n    return 1;\n  } else if (\n    document.documentElement.clientWidth > 767 &&\n    document.documentElement.clientWidth < 1440\n  ) {\n    return 3;\n    // для більших за планшет\n  } else if (document.documentElement.clientWidth > 1439) {\n    return 5;\n  }\n}\n\nexport function renderError() {\n  return `<div class=\"content-error\">\n              <img\n              src=\"${path}\"\n              alt=\"error\"\n              width=\"400\"\n              height=\"400\"\n              class=\"content_imgError\"/>\n         </div>`;\n}\n"],"names":["module","exports","parcelRequire","getBundleURL","resolve","register","JSON","parse","$bBhLo","$6JpON","$a6329c5cb4925ffd$var$categoriesList","document","querySelector","$a6329c5cb4925ffd$var$containerBook","$a6329c5cb4925ffd$var$content","$a6329c5cb4925ffd$export$3a1253a897925caa","classList","add","innerHTML","fetchToAllBooks","then","result","data","remove","concat","map","kategory","list_name","books","book","indexBook","_id","book_image","title","author","join","$a6329c5cb4925ffd$var$getBooksByCat","butElem","nextElementSibling","style","display","fetchBooksByCategory","name","markup","elem","arrayBooks","index","length","$a6329c5cb4925ffd$var$hiddenBtnSeeMore","parentNode","nextSibling","firstElementChild","$parcel$interopDefault","Notify","info","previousElementSibling","insertAdjacentHTML","$a6329c5cb4925ffd$export$eda316e6c8ba7b5f","catch","addEventListener","e","preventDefault","target","type","border","init","width","position","distance","opacity","fontSize","clickToClose","timeout","background","$7f543448dd6aeee5$var$elementHaveCurrent","$7f543448dd6aeee5$var$refs","container","element","booksContainer","categoriesList","$7f543448dd6aeee5$var$containerBook","fetchCategoriesList","response","categories","categori","error","console","event","clickedElement","contains","categoryName","dataset","curentClic","querySelectorAll","forEach","item","resp","window","innerWidth","scrollIntoView","block","behavior","category","booksData","words","firstPart","secondPart","markupCategori","markupList","split","slice"],"version":3,"file":"index.2f44c8a4.js.map"}